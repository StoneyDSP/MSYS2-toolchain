if(NOT _MINGW64_CXX_COMPILER_ID_RUN)
set(_MINGW64_CXX_COMPILER_ID_RUN 1)

set(MINGW64_CXX_COMPILER_ENV_VAR "CXX")
set(MINGW64_CXX_COMPILER_ID_RUN 1)
set(MINGW64_COMPILER_IS_GNUCXX 1)

mark_as_advanced(MINGW64_CXX_COMPILER_ENV_VAR)
mark_as_advanced(MINGW64_CXX_COMPILER_ID_RUN)
mark_as_advanced(MINGW64_COMPILER_IS_GNUCXX)

find_program(MINGW64_CXX_COMPILER            "${Z_MINGW64_ROOT_DIR}/bin/x86_64-w64-mingw32-g++.exe")
find_program(MINGW64_CXX_COMPILER_AR         "${Z_MINGW64_ROOT_DIR}/bin/gcc-ar.exe")
find_program(MINGW64_CXX_COMPILER_RANLIB     "${Z_MINGW64_ROOT_DIR}/bin/gcc-ranlib.exe")

set(MINGW64_CXX_COMPILER            "${MINGW64_CXX_COMPILER}")
set(MINGW64_CXX_COMPILER_AR         "${MINGW64_CXX_COMPILER_AR}")
set(MINGW64_CXX_COMPILER_RANLIB     "${MINGW64_CXX_COMPILER_RANLIB}")

mark_as_advanced(MINGW64_CXX_COMPILER)
mark_as_advanced(MINGW64_CXX_COMPILER_AR)
mark_as_advanced(MINGW64_CXX_COMPILER_RANLIB)

set(MINGW64_CXX_PLATFORM_ID                 "MinGW")
set(MINGW64_CXX_COMPILER_ID                 "GNU")
set(MINGW64_CXX_COMPILER_VERSION            "13.1.0")
set(MINGW64_CXX_COMPILER_VERSION_INTERNAL   "")
set(MINGW64_CXX_COMPILER_FRONTEND_VARIANT   "GNU")
set(MINGW64_CXX_SIMULATE_ID                 "")
set(MINGW64_CXX_SIMULATE_VERSION            "")
set(MINGW64_CXX_STANDARD_COMPUTED_DEFAULT   "17")
set(MINGW64_CXX_EXTENSIONS_COMPUTED_DEFAULT "ON")

mark_as_advanced(MINGW64_CXX_PLATFORM_ID)
mark_as_advanced(MINGW64_CXX_COMPILER_ID)
mark_as_advanced(MINGW64_CXX_COMPILER_VERSION)
mark_as_advanced(MINGW64_CXX_COMPILER_VERSION_INTERNAL)
mark_as_advanced(MINGW64_CXX_COMPILER_FRONTEND_VARIANT)
mark_as_advanced(MINGW64_CXX_SIMULATE_ID)
mark_as_advanced(MINGW64_CXX_SIMULATE_VERSION)
mark_as_advanced(MINGW64_CXX_STANDARD_COMPUTED_DEFAULT)
mark_as_advanced(MINGW64_CXX_EXTENSIONS_COMPUTED_DEFAULT)

set(MINGW64_CXX98_COMPILE_FEATURES)
list(APPEND MINGW64_CXX98_COMPILE_FEATURES cxx_std_98)
list(APPEND MINGW64_CXX98_COMPILE_FEATURES cxx_template_template_parameters)
set(MINGW64_CXX98_COMPILE_FEATURES "${MINGW64_CXX98_COMPILE_FEATURES}")
mark_as_advanced(MINGW64_CXX98_COMPILE_FEATURES)

set(MINGW64_CXX11_COMPILE_FEATURES)
list(APPEND MINGW64_CXX11_COMPILE_FEATURES cxx_std_11)
list(APPEND MINGW64_CXX11_COMPILE_FEATURES cxx_alias_templates)
list(APPEND MINGW64_CXX11_COMPILE_FEATURES cxx_alignas)
list(APPEND MINGW64_CXX11_COMPILE_FEATURES cxx_alignof)
list(APPEND MINGW64_CXX11_COMPILE_FEATURES cxx_attributes)
list(APPEND MINGW64_CXX11_COMPILE_FEATURES cxx_auto_type)
list(APPEND MINGW64_CXX11_COMPILE_FEATURES cxx_constexpr)
list(APPEND MINGW64_CXX11_COMPILE_FEATURES cxx_decltype)
list(APPEND MINGW64_CXX11_COMPILE_FEATURES cxx_decltype_incomplete_return_types)
list(APPEND MINGW64_CXX11_COMPILE_FEATURES cxx_default_function_template_args)
list(APPEND MINGW64_CXX11_COMPILE_FEATURES cxx_defaulted_functions)
list(APPEND MINGW64_CXX11_COMPILE_FEATURES cxx_defaulted_move_initializers)
list(APPEND MINGW64_CXX11_COMPILE_FEATURES cxx_delegating_constructors)
list(APPEND MINGW64_CXX11_COMPILE_FEATURES cxx_deleted_functions)
list(APPEND MINGW64_CXX11_COMPILE_FEATURES cxx_enum_forward_declarations)
list(APPEND MINGW64_CXX11_COMPILE_FEATURES cxx_explicit_conversions)
list(APPEND MINGW64_CXX11_COMPILE_FEATURES cxx_extended_friend_declarations)
list(APPEND MINGW64_CXX11_COMPILE_FEATURES cxx_extern_templates)
list(APPEND MINGW64_CXX11_COMPILE_FEATURES cxx_final)
list(APPEND MINGW64_CXX11_COMPILE_FEATURES cxx_func_identifier)
list(APPEND MINGW64_CXX11_COMPILE_FEATURES cxx_generalized_initializers)
list(APPEND MINGW64_CXX11_COMPILE_FEATURES cxx_inheriting_constructors)
list(APPEND MINGW64_CXX11_COMPILE_FEATURES cxx_inline_namespaces)
list(APPEND MINGW64_CXX11_COMPILE_FEATURES cxx_lambdas)
list(APPEND MINGW64_CXX11_COMPILE_FEATURES cxx_local_type_template_args)
list(APPEND MINGW64_CXX11_COMPILE_FEATURES cxx_long_long_type)
list(APPEND MINGW64_CXX11_COMPILE_FEATURES cxx_noexcept)
list(APPEND MINGW64_CXX11_COMPILE_FEATURES cxx_nonstatic_member_init)
list(APPEND MINGW64_CXX11_COMPILE_FEATURES cxx_nullptr)
list(APPEND MINGW64_CXX11_COMPILE_FEATURES cxx_override)
list(APPEND MINGW64_CXX11_COMPILE_FEATURES cxx_range_for)
list(APPEND MINGW64_CXX11_COMPILE_FEATURES cxx_raw_string_literals)
list(APPEND MINGW64_CXX11_COMPILE_FEATURES cxx_reference_qualified_functions)
list(APPEND MINGW64_CXX11_COMPILE_FEATURES cxx_right_angle_brackets)
list(APPEND MINGW64_CXX11_COMPILE_FEATURES cxx_rvalue_references)
list(APPEND MINGW64_CXX11_COMPILE_FEATURES cxx_sizeof_member)
list(APPEND MINGW64_CXX11_COMPILE_FEATURES cxx_static_assert)
list(APPEND MINGW64_CXX11_COMPILE_FEATURES cxx_strong_enums)
list(APPEND MINGW64_CXX11_COMPILE_FEATURES cxx_thread_local)
list(APPEND MINGW64_CXX11_COMPILE_FEATURES cxx_trailing_return_types)
list(APPEND MINGW64_CXX11_COMPILE_FEATURES cxx_unicode_literals)
list(APPEND MINGW64_CXX11_COMPILE_FEATURES cxx_uniform_initialization)
list(APPEND MINGW64_CXX11_COMPILE_FEATURES cxx_unrestricted_unions)
list(APPEND MINGW64_CXX11_COMPILE_FEATURES cxx_user_literals)
list(APPEND MINGW64_CXX11_COMPILE_FEATURES cxx_variadic_macros)
list(APPEND MINGW64_CXX11_COMPILE_FEATURES cxx_variadic_templates)
set(MINGW64_CXX11_COMPILE_FEATURES "${MINGW64_CXX11_COMPILE_FEATURES}")
mark_as_advanced(MINGW64_CXX11_COMPILE_FEATURES)

set(MINGW64_CXX14_COMPILE_FEATURES)
list(APPEND MINGW64_CXX14_COMPILE_FEATURES cxx_std_14)
list(APPEND MINGW64_CXX14_COMPILE_FEATURES cxx_aggregate_default_initializers)
list(APPEND MINGW64_CXX14_COMPILE_FEATURES cxx_attribute_deprecated)
list(APPEND MINGW64_CXX14_COMPILE_FEATURES cxx_binary_literals)
list(APPEND MINGW64_CXX14_COMPILE_FEATURES cxx_contextual_conversions)
list(APPEND MINGW64_CXX14_COMPILE_FEATURES cxx_decltype_auto)
list(APPEND MINGW64_CXX14_COMPILE_FEATURES cxx_digit_separators)
list(APPEND MINGW64_CXX14_COMPILE_FEATURES cxx_generic_lambdas)
list(APPEND MINGW64_CXX14_COMPILE_FEATURES cxx_lambda_init_captures)
list(APPEND MINGW64_CXX14_COMPILE_FEATURES cxx_relaxed_constexpr)
list(APPEND MINGW64_CXX14_COMPILE_FEATURES cxx_return_type_deduction)
list(APPEND MINGW64_CXX14_COMPILE_FEATURES cxx_variable_templates)
set(MINGW64_CXX14_COMPILE_FEATURES "${MINGW64_CXX14_COMPILE_FEATURES}")
mark_as_advanced(MINGW64_CXX14_COMPILE_FEATURES)

set(MINGW64_CXX17_COMPILE_FEATURES)
list(APPEND MINGW64_CXX17_COMPILE_FEATURES cxx_std_17)
set(MINGW64_CXX17_COMPILE_FEATURES "${MINGW64_CXX17_COMPILE_FEATURES}")
mark_as_advanced(MINGW64_CXX17_COMPILE_FEATURES)

set(MINGW64_CXX20_COMPILE_FEATURES)
list(APPEND MINGW64_CXX20_COMPILE_FEATURES cxx_std_20)
set(MINGW64_CXX20_COMPILE_FEATURES "${MINGW64_CXX20_COMPILE_FEATURES}")
mark_as_advanced(MINGW64_CXX20_COMPILE_FEATURES)

set(MINGW64_CXX23_COMPILE_FEATURES)
list(APPEND MINGW64_CXX23_COMPILE_FEATURES cxx_std_23)
set(MINGW64_CXX23_COMPILE_FEATURES "${MINGW64_CXX23_COMPILE_FEATURES}")
mark_as_advanced(MINGW64_CXX23_COMPILE_FEATURES)

set(MINGW64_CXX_COMPILE_FEATURES)
list(APPEND MINGW64_CXX_COMPILE_FEATURES "${MINGW64_CXX98_COMPILE_FEATURES}")
list(APPEND MINGW64_CXX_COMPILE_FEATURES "${MINGW64_CXX11_COMPILE_FEATURES}")
list(APPEND MINGW64_CXX_COMPILE_FEATURES "${MINGW64_CXX14_COMPILE_FEATURES}")
list(APPEND MINGW64_CXX_COMPILE_FEATURES "${MINGW64_CXX17_COMPILE_FEATURES}")
list(APPEND MINGW64_CXX_COMPILE_FEATURES "${MINGW64_CXX20_COMPILE_FEATURES}")
list(APPEND MINGW64_CXX_COMPILE_FEATURES "${MINGW64_CXX23_COMPILE_FEATURES}")
set(MINGW64_CXX_COMPILE_FEATURES "${MINGW64_CXX_COMPILE_FEATURES}")
mark_as_advanced(MINGW64_CXX_COMPILE_FEATURES)

set(MINGW64_CXX_IMPLICIT_INCLUDE_DIRECTORIES)
list(APPEND MINGW64_CXX_IMPLICIT_INCLUDE_DIRECTORIES "${Z_MINGW64_ROOT_DIR}/include/c++/${MINGW64_CXX_COMPILER_VERSION}/x86_64-w64-mingw32")
list(APPEND MINGW64_CXX_IMPLICIT_INCLUDE_DIRECTORIES "${Z_MINGW64_ROOT_DIR}/include/c++/${MINGW64_CXX_COMPILER_VERSION}")
list(APPEND MINGW64_CXX_IMPLICIT_INCLUDE_DIRECTORIES "${Z_MINGW64_ROOT_DIR}/include/c++/${MINGW64_CXX_COMPILER_VERSION}/backward")
list(APPEND MINGW64_CXX_IMPLICIT_INCLUDE_DIRECTORIES "${Z_MINGW64_ROOT_DIR}/lib/gcc/x86_64-w64-mingw32/${MINGW64_CXX_COMPILER_VERSION}/include")
list(APPEND MINGW64_CXX_IMPLICIT_INCLUDE_DIRECTORIES "${Z_MINGW64_ROOT_DIR}/include")
list(APPEND MINGW64_CXX_IMPLICIT_INCLUDE_DIRECTORIES "${Z_MINGW64_ROOT_DIR}/lib/gcc/x86_64-w64-mingw32/${MINGW64_CXX_COMPILER_VERSION}/include-fixed")
set(MINGW64_CXX_IMPLICIT_INCLUDE_DIRECTORIES "${MINGW64_CXX_IMPLICIT_INCLUDE_DIRECTORIES}")
mark_as_advanced(MINGW64_CXX_IMPLICIT_INCLUDE_DIRECTORIES)

set(MINGW64_CXX_IMPLICIT_LINK_DIRECTORIES)
list(APPEND MINGW64_CXX_IMPLICIT_LINK_DIRECTORIES "${Z_MINGW64_ROOT_DIR}/lib/gcc/x86_64-w64-mingw32/${MINGW64_CXX_COMPILER_VERSION}")
list(APPEND MINGW64_CXX_IMPLICIT_LINK_DIRECTORIES "${Z_MINGW64_ROOT_DIR}/lib/gcc")
list(APPEND MINGW64_CXX_IMPLICIT_LINK_DIRECTORIES "${Z_MINGW64_ROOT_DIR}/x86_64-w64-mingw32/lib")
list(APPEND MINGW64_CXX_IMPLICIT_LINK_DIRECTORIES "${Z_MINGW64_ROOT_DIR}/lib")
set(MINGW64_CXX_IMPLICIT_LINK_DIRECTORIES "${MINGW64_CXX_IMPLICIT_LINK_DIRECTORIES}")
mark_as_advanced(MINGW64_CXX_IMPLICIT_LINK_DIRECTORIES)

set(MINGW64_CXX_IMPLICIT_LINK_LIBRARIES)
list(APPEND MINGW64_CXX_IMPLICIT_LINK_LIBRARIES stdc++)
list(APPEND MINGW64_CXX_IMPLICIT_LINK_LIBRARIES mingw32gcc_s)
list(APPEND MINGW64_CXX_IMPLICIT_LINK_LIBRARIES gcc)
list(APPEND MINGW64_CXX_IMPLICIT_LINK_LIBRARIES moldname)
list(APPEND MINGW64_CXX_IMPLICIT_LINK_LIBRARIES mingwex)
list(APPEND MINGW64_CXX_IMPLICIT_LINK_LIBRARIES pthread)
list(APPEND MINGW64_CXX_IMPLICIT_LINK_LIBRARIES advapi32)
list(APPEND MINGW64_CXX_IMPLICIT_LINK_LIBRARIES shell32)
list(APPEND MINGW64_CXX_IMPLICIT_LINK_LIBRARIES user32)
list(APPEND MINGW64_CXX_IMPLICIT_LINK_LIBRARIES kernel32)
list(APPEND MINGW64_CXX_IMPLICIT_LINK_LIBRARIES mingw32)
list(APPEND MINGW64_CXX_IMPLICIT_LINK_LIBRARIES gcc_s)
set(MINGW64_CXX_IMPLICIT_LINK_LIBRARIES "${MINGW64_CXX_IMPLICIT_LINK_LIBRARIES}")
mark_as_advanced(MINGW64_CXX_IMPLICIT_LINK_LIBRARIES)

set(MINGW64_CXX_IMPLICIT_LINK_FRAMEWORK_DIRECTORIES "")
mark_as_advanced(MINGW64_CXX_IMPLICIT_LINK_FRAMEWORK_DIRECTORIES)

set(MINGW64_CXX_SOURCE_FILE_EXTENSIONS)
list(APPEND MINGW64_CXX_SOURCE_FILE_EXTENSIONS C)
list(APPEND MINGW64_CXX_SOURCE_FILE_EXTENSIONS M)
list(APPEND MINGW64_CXX_SOURCE_FILE_EXTENSIONS c++)
list(APPEND MINGW64_CXX_SOURCE_FILE_EXTENSIONS cc)
list(APPEND MINGW64_CXX_SOURCE_FILE_EXTENSIONS cpp)
list(APPEND MINGW64_CXX_SOURCE_FILE_EXTENSIONS cxx)
list(APPEND MINGW64_CXX_SOURCE_FILE_EXTENSIONS m)
list(APPEND MINGW64_CXX_SOURCE_FILE_EXTENSIONS mm)
list(APPEND MINGW64_CXX_SOURCE_FILE_EXTENSIONS mpp)
list(APPEND MINGW64_CXX_SOURCE_FILE_EXTENSIONS CPP)
list(APPEND MINGW64_CXX_SOURCE_FILE_EXTENSIONS ixx)
list(APPEND MINGW64_CXX_SOURCE_FILE_EXTENSIONS cppm)
set(MINGW64_CXX_SOURCE_FILE_EXTENSIONS "${MINGW64_CXX_SOURCE_FILE_EXTENSIONS}")
mark_as_advanced(MINGW64_CXX_SOURCE_FILE_EXTENSIONS)

set(MINGW64_CXX_IGNORE_EXTENSIONS)
list(APPEND MINGW64_CXX_IGNORE_EXTENSIONS inl)
list(APPEND MINGW64_CXX_IGNORE_EXTENSIONS h)
list(APPEND MINGW64_CXX_IGNORE_EXTENSIONS hpp)
list(APPEND MINGW64_CXX_IGNORE_EXTENSIONS HPP)
list(APPEND MINGW64_CXX_IGNORE_EXTENSIONS H)
list(APPEND MINGW64_CXX_IGNORE_EXTENSIONS o)
list(APPEND MINGW64_CXX_IGNORE_EXTENSIONS O)
list(APPEND MINGW64_CXX_IGNORE_EXTENSIONS obj)
list(APPEND MINGW64_CXX_IGNORE_EXTENSIONS OBJ)
list(APPEND MINGW64_CXX_IGNORE_EXTENSIONS def)
list(APPEND MINGW64_CXX_IGNORE_EXTENSIONS DEF)
list(APPEND MINGW64_CXX_IGNORE_EXTENSIONS rc)
list(APPEND MINGW64_CXX_IGNORE_EXTENSIONS RC)
set(MINGW64_CXX_IGNORE_EXTENSIONS "${MINGW64_CXX_IGNORE_EXTENSIONS}")
mark_as_advanced(MINGW64_CXX_IGNORE_EXTENSIONS)

foreach (lang C OBJC OBJCXX)
    if (MINGW64_${lang}_COMPILER_ID_RUN)
        foreach(extension IN LISTS MINGW64_${lang}_SOURCE_FILE_EXTENSIONS)
            list(REMOVE_ITEM MINGW64_CXX_SOURCE_FILE_EXTENSIONS ${extension})
        endforeach()
    endif()
endforeach()

set(MINGW64_CXX_CL_SHOWINCLUDES_PREFIX "")
if(MINGW64_CXX_CL_SHOWINCLUDES_PREFIX)
    set(MINGW64_CL_SHOWINCLUDES_PREFIX "${MINGW64_CXX_CL_SHOWINCLUDES_PREFIX}")
    mark_as_advanced(MINGW64_CXX_CL_SHOWINCLUDES_PREFIX)
endif()

set(MINGW64_CXX_FLAGS)
string(APPEND MINGW64_CXX_FLAGS "-march=nocona ")
string(APPEND MINGW64_CXX_FLAGS "-msahf ")
string(APPEND MINGW64_CXX_FLAGS "-mtune=generic ")
string(APPEND MINGW64_CXX_FLAGS "-pipe ")
set(MINGW64_CXX_FLAGS "${MINGW64_CXX_FLAGS}")
mark_as_advanced(MINGW64_CXX_FLAGS)

set(MINGW64_CXX_FLAGS_DEBUG)
string(APPEND MINGW64_CXX_FLAGS_DEBUG " -ggdb ")
string(APPEND MINGW64_CXX_FLAGS_DEBUG " -Og ")
set(MINGW64_CXX_FLAGS_DEBUG "${MINGW64_CXX_FLAGS_DEBUG}")
mark_as_advanced(MINGW64_CXX_FLAGS_DEBUG)

set(MINGW64_CXX_FLAGS_RELEASE)
string(APPEND MINGW64_CXX_FLAGS_RELEASE " -O2 ")
string(APPEND MINGW64_CXX_FLAGS_RELEASE " -DNDEBUG ")
set(MINGW64_CXX_FLAGS_RELEASE "${MINGW64_CXX_FLAGS_RELEASE}")
mark_as_advanced(MINGW64_CXX_FLAGS_RELEASE)

set(MINGW64_CXX_FLAGS_MINSIZEREL)
string(APPEND MINGW64_CXX_FLAGS_MINSIZEREL " -Os ")
string(APPEND MINGW64_CXX_FLAGS_MINSIZEREL " -DNDEBUG ")
set(MINGW64_CXX_FLAGS_MINSIZEREL "${MINGW64_CXX_FLAGS_MINSIZEREL}")
mark_as_advanced(MINGW64_CXX_FLAGS_MINSIZEREL)

set(MINGW64_CXX_FLAGS_RELWITHDEBINFO)
string(APPEND MINGW64_CXX_FLAGS_RELWITHDEBINFO " -ggdb ")
string(APPEND MINGW64_CXX_FLAGS_RELWITHDEBINFO " -O2 ")
set(MINGW64_CXX_FLAGS_RELWITHDEBINFO "${MINGW64_CXX_FLAGS_RELWITHDEBINFO}")
mark_as_advanced(MINGW64_CXX_FLAGS_RELWITHDEBINFO)

endif() # if(NOT _MINGW64_CXX_COMPILER_ID_RUN)

# # Save compiler ABI information.
# set(MINGW64_CXX_SIZEOF_DATA_PTR "8")
# set(MINGW64_CXX_COMPILER_ABI "")
# set(MINGW64_CXX_BYTE_ORDER "LITTLE_ENDIAN")
# set(MINGW64_CXX_LIBRARY_ARCHITECTURE "")

# if(MINGW64_CXX_SIZEOF_DATA_PTR)
#     set(MINGW64_SIZEOF_VOID_P "${MINGW64_CXX_SIZEOF_DATA_PTR}")
# endif()

# if(MINGW64_CXX_COMPILER_ABI)
#     set(MINGW64_INTERNAL_PLATFORM_ABI "${MINGW64_CXX_COMPILER_ABI}")
# endif()

# if(MINGW64_CXX_LIBRARY_ARCHITECTURE)
#     set(MINGW64_LIBRARY_ARCHITECTURE "")
# endif()

# set(MINGW64_CXX_COMPILER_LOADED 1)
# set(MINGW64_CXX_COMPILER_WORKS TRUE)
# set(MINGW64_CXX_ABI_COMPILED TRUE)

# set(MINGW64_CXX_COMPILER_ARG1 "")
# set(MINGW64_CXX_COMPILER_WRAPPER            "")
# set(MINGW64_CXX_LINKER_PREFERENCE 30)
# set(MINGW64_CXX_LINKER_PREFERENCE_PROPAGATES 1)
