#!/usr/bin/env cmake
cmake_minimum_required(VERSION 3.14...3.27 FATAL_ERROR)
set(CMAKE_MODULE_PATH "${CMAKE_CURRENT_LIST_DIR}/scripts/cmake/Modules" "${CMAKE_MODULE_PATH}")

project(msystem)
set(PROJECT_VERSION_MAJOR 1)
set(PROJECT_VERSION_MINOR 0)
set(PROJECT_VERSION_PATCH 0)
include(GetSourceInfo)
get_source_info()
set(PROJECT_VERSION_TWEAK "${git_revision}")
set (${PROJECT_NAME}_VERSION "${PROJECT_VERSION_MAJOR}.${PROJECT_VERSION_MINOR}.${PROJECT_VERSION_PATCH}-${PROJECT_VERSION_TWEAK}" CACHE STRING "Value given to the ``VERSION`` option of the most recent call to the ``project()`` command, if any." FORCE)


option(OPTION_BUILD_PACMAN "" ON)
if(OPTION_BUILD_PACMAN)
    add_subdirectory(pacman)
endif()

option(OPTION_BUILD_TEST_PROJECT "" OFF)
if(OPTION_BUILD_TEST_PROJECT)
    add_subdirectory(tests/CMakeProject1)
endif()

# include("c:/Users/natha/Development/StoneyDSP/MSYS2-toolchain/scripts/cmake/Modules/_MinGW64/MINGW64InstallDirs.cmake")

# set(ENV_VARS_FILE_PATH "${CMAKE_CURRENT_BINARY_DIR}/.${MSYS_TARGET_TRIPLET}/.env")
# # file(WRITE ${ENV_VARS_FILE_PATH} "Generator: Toolchain file.\n")

# execute_process(COMMAND "${CMAKE_COMMAND}" -E environment
#     WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}
#     OUTPUT_VARIABLE ENV_VARS_FILE
# )

# file(APPEND ${ENV_VARS_FILE_PATH} "${ENV_VARS_FILE}")

# set(OUT_FILE_PATH "${CMAKE_BINARY_DIR}/OUT_INFO.sh")
# set(CLONE_FILE_PATH "${CMAKE_BINARY_DIR}/CLONE_INFO.cmake")
# file(WRITE ${OUT_FILE_PATH} "# Generated by: ${CMAKE_PROJECT_NAME}\n")
# file(WRITE ${CLONE_FILE_PATH} "# Generated by: ${CMAKE_PROJECT_NAME}\n")
# get_cmake_property(all_variables VARIABLES)
# foreach(variable ${all_variables})
#     if (DEFINED variable)
#         file(APPEND ${OUT_FILE_PATH} "${variable}=\"${${variable}}\"\n")
#         file(APPEND ${CLONE_FILE_PATH} "set(${variable} \"${${variable}}\")\n")
#     endif()
# endforeach()

get_property(_project_enabled_languages GLOBAL PROPERTY ENABLED_LANGUAGES)
message(STATUS "${PROJECT_NAME} languages used: ${_project_enabled_languages}")
unset(_project_enabled_languages)
